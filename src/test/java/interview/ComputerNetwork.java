package interview;

/**
 * ClassName: ComputerNetwork <br/>
 * Function: <br/>
 *
 * @author gary.liu
 * @date 2019/9/29
 */
public class ComputerNetwork {
/**
 1.TCP和UDP的使用场景
    TCP可靠的传输，UDP是不可靠的传输，比如视频

 2.TCP三次握手的过程，如果没有第三次握手有什么问题。
    三次握手：
      1、请求端（通常也称为客户端）发送一个SYN段表示客户期望连接服务器端口，初始序列号为a。
      2、服务器发回序列号为b的SYN段作为响应。同时设置确认序号为客户端的序列号加1（a+1）作为对客户端的SYN报文的确认。
      3、客户端设置序列号为服务器端的序列号加1（b+1）作为对服务器端SYN报文段的确认。
   没有第三次握手可能会发生死锁，已失效的连接请求报文段突然又传送到了服务端，因而产生错误

    https://bbs.csdn.net/topics/390706512

 3.浏览器地址栏输入www.baidu.com发生什么，我说了dns,tcp,http 之类的，比较概况
 面试官：dns具体流程，怎么查询
 我大概从缓存，再到嵌套查询答的


  */

/** alibaba
 1.Http2.0与1.1有啥区别
    HTTP/1.1是当前正在使用的版本。该版本默认采用持久连接，并能很好地配合代理服务器工作。还支持以管道方式同时发送多个请求，以便降低线路负载，提高传输速度。
 HTTP/1.1新增了：OPTIONS、PUT、DELETE、TRACE、CONNECT五种HTTP请求方法。
    HTTP/2通过支持请求与相应的多路重用来减少延迟，通过压缩HTTP头字段将协议开销降到最低，同时增加了对请求优先级和服务器端推送的支持。

 2.有哪些二进制传输协议
    http,thrift,Protobuf

 */

/** Netease
 1.socket与Http区别，socket长连接断开了怎么办

 2.在socket传输文件中链接断开了，怎么继续传输文件。引申到了如何断点续传


 */


/** other
 1.TCP四次挥手
     1、客户端设置序列号为服务器端的序列号加1（b1、请求端（通常也称为客户端）想终止连接则发送一个FIN段，序列号设置为a。
     2、服务器回应一个确认序号为客户端的序列号加1（a+1）的ACK确认段，作为对客户端的FIN报文的确认。
     3、服务器端向客户端发送一个FIN终止段（设置序列号为b，确认号为a+1）。
     4、客户端返回一个确认报文（设置序列号为b+1）作为响应。


 2.为什么要三次握手
 “这就是三次握手啊， 我给你分析一下啊， 这三次握手主要是为了验证我这边和县衙那边的发信/收信能力没问题， 这样就证明连接是通的， 可以正式发货了。”
 我算是明白了这所谓的TCP, 无非就是在那些不可靠马匹运输的基础上建立一个可靠的发送办法， 基本上就是失败重发。



 */

}
